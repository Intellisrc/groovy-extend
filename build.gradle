group groupName
version currentVersion

apply plugin: 'com.jfrog.artifactory'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'maven-publish'

currentVersion="2.5.6.4"

repositories {
    jcenter()
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '4.+')
    }
}

dependencies {
    compile 'commons-net:commons-net:3.6'
    compile 'org.codehaus.groovy:groovy-all:2.5.6'
    testCompile 'org.spockframework:spock-unitils:1.3-groovy-2.5'
}

task generateModule {
    doLast {
        SourceSet main = sourceSets.main
        SourceDirectorySet groovy = main.groovy
        List<String> extensionFiles = []
        List<String> staticFiles = []
        groovy.toList().each {
            File g ->
                String pkg = g.absolutePath.replaceAll(File.separator, '.') -
                        groovy.srcDirs[0].toString().replaceAll(File.separator, '.')
                String clsName = pkg[1 .. pkg.lastIndexOf('.') - 1].toString()
                if(clsName.contains('Static')) {
                    staticFiles << clsName
                } else {
                    extensionFiles << clsName
                }
            }
            File services = new File(buildDir,"classes/groovy/main/META-INF/services")
            services.mkdirs()
            File ext = new File(services, 'org.codehaus.groovy.runtime.ExtensionModule')
            ext.text = """moduleName=groovy-common-extensions
moduleVersion=$version
extensionClasses=${extensionFiles.join(',')}
staticExtensionClasses=${staticFiles.join(',')}"""
        }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId "${artifact}"
            from components.java
        }
    }
}

artifactory {
    contextUrl = "${repositoryURL}"
    publish {
        repository {
            repoKey = currentVersion.endsWith("SNAPSHOT") ? "${repositoryDevelop}" : "${repositoryStable}" // The Artifactory repository key to publish to
            username = "${artifactoryUser}" // The publisher user name
            password = "${artifactoryPassword}" // The publisher password
        }
        defaults {
            publications('mavenJava')
            publishArtifacts = true
            // Properties to be attached to the published artifacts.
            properties = ['qa.level': 'basic', 'dev.team' : 'core']
            // Publish generated POM files to Artifactory (true by default)
            publishPom = true
        }
    }
    resolve {
        repository {
            repoKey =  "${repositoryResolve}" // The Artifactory repository key to publish to
            username = "${artifactoryUser}" // The publisher user name
            password = "${artifactoryPassword}" // The publisher password
        }
    }
}

// Hook up dependencies
jar.dependsOn( generateModule )
test.dependsOn( jar )
artifacts {
    archives jar
}